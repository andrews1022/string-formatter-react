{"version":3,"sources":["components/Heading.js","components/Checkbox.js","components/StringFormatter.js","components/Footer.js","App.js","index.js"],"names":["Heading","text","className","Checkbox","onChangeFn","identifier","labelText","formattingFn","type","name","id","onChange","htmlFor","StringFormatter","useState","output","checkedBox","setCheckedBox","errorMessage","setErrorMessage","inputRef","useRef","outputRef","selectCheck","e","selectedCheckbox","target","checked","length","currentState","preventDefault","ref","value","onClick","duration","current","trim","getInputValue","console","log","dir","setTimeout","toLowerCase","toUpperCase","replace","split","map","v","Math","round","random","join","readOnly","Footer","Date","getFullYear","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe25a3ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Heading = ({ text }) => <h1 className='heading'>{text}</h1>;\r\n\r\nexport default Heading;\r\n","import React from 'react';\r\n\r\nconst Checkbox = ({ onChangeFn, identifier, labelText, formattingFn }) => {\r\n\treturn (\r\n\t\t<div className='formatter__group'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='formatter__check'\r\n\t\t\t\ttype='checkbox'\r\n\t\t\t\tname={identifier}\r\n\t\t\t\tid={identifier}\r\n\t\t\t\tonChange={onChangeFn}\r\n\t\t\t/>\r\n\t\t\t<label className='formatter__check-label' htmlFor={identifier}>\r\n\t\t\t\t{labelText}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useRef } from 'react';\r\nimport Checkbox from './Checkbox';\r\n\r\nconst StringFormatter = () => {\r\n\tconst [output, setOutput] = useState('');\r\n\tconst [checkedBox, setCheckedBox] = useState([]);\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\r\n\tconst inputRef = useRef(null);\r\n\tconst outputRef = useRef(null);\r\n\r\n\t// get value from input text area\r\n\tconst getInputValue = (e) => {\r\n\t\te.preventDefault();\r\n\t\treturn inputRef.current.value.trim();\r\n\t};\r\n\r\n\t// convert text to lowercase\r\n\tconst formatTextLowerCase = (text) => text.toLowerCase();\r\n\r\n\t// convert text to lowercase\r\n\tconst formatTextUpperCase = (text) => text.toUpperCase();\r\n\r\n\t// convert text to \"web-ready\"\r\n\tconst formatTextWebReady = (text) => {\r\n\t\treturn text\r\n\t\t\t.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]/g, '')\r\n\t\t\t.replace(/\\s+/g, '-')\r\n\t\t\t.toLowerCase();\r\n\t};\r\n\r\n\t// convert text to \"PeOPleFucKInGDyINg\"\r\n\tconst formatTextPeopleFuckingDying = (text) => {\r\n\t\treturn text\r\n\t\t\t.split('')\r\n\t\t\t.map((v) => (Math.round(Math.random()) ? v.toUpperCase() : v.toLowerCase()))\r\n\t\t\t.join('');\r\n\t};\r\n\r\n\t// limit number of checkboxes checked\r\n\tconst selectCheck = (e) => {\r\n\t\tconst selectedCheckbox = e.target;\r\n\t\tconst selectedCheckboxIsChecked = selectedCheckbox.checked;\r\n\t\tconst limit = 1;\r\n\r\n\t\tif (selectedCheckboxIsChecked) {\r\n\t\t\tif (checkedBox.length < limit) {\r\n\t\t\t\tsetCheckedBox((currentState) => [...currentState, selectedCheckbox]);\r\n\t\t\t} else {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.target.checked = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// reset to initial state\r\n\t\t\tsetCheckedBox(() => []);\r\n\t\t}\r\n\t};\r\n\r\n\tconst displayErrorMessage = (message, duration) => {\r\n\t\tsetErrorMessage(message);\r\n\t\tsetTimeout(() => setErrorMessage(''), duration);\r\n\t};\r\n\r\n\t// mirror text from input field to output field\r\n\tconst mirrorText = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// get input value\r\n\t\t// check if input value exists\r\n\t\t// if not, display error message\r\n\r\n\t\tconst inputValue = getInputValue(e);\r\n\r\n\t\tif (!inputValue || checkedBox.length === 0) {\r\n\t\t\tdisplayErrorMessage('Please enter a value and/or select a box', 2250);\r\n\t\t} else {\r\n\t\t\t// if both valid, get function from formattingFn prop\r\n\t\t\t// use that function to format input value\r\n\t\t\t// set output value to that formatted value\r\n\r\n\t\t\tconsole.log(checkedBox);\r\n\t\t\tconsole.log(checkedBox.formattingFn);\r\n\t\t\tconsole.dir(checkedBox);\r\n\t\t}\r\n\r\n\t\t// const inputValue = inputRef.current.value;\r\n\t\t// const formattedText = formatTextWebReady(inputValue);\r\n\t\t// outputRef.current.value = setOutput(formattedText);\r\n\t\t// console.log(checkedBox);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='formatter'>\r\n\t\t\t<div className='formatter__row'>\r\n\t\t\t\t<div className='formatter__box'>\r\n\t\t\t\t\t<label className='formatter__label' htmlFor='input'>\r\n\t\t\t\t\t\tInput\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='formatter__textarea'\r\n\t\t\t\t\t\tname='input'\r\n\t\t\t\t\t\tid='input'\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<input className='formatter__button' type='submit' value='Format' onClick={mirrorText} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='formatter__box'>\r\n\t\t\t\t\t<span className='formatter__label'>Options (Pick 1)</span>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonChangeFn={selectCheck}\r\n\t\t\t\t\t\tidentifier='format-lowercase'\r\n\t\t\t\t\t\tlabelText='all lowercase'\r\n\t\t\t\t\t\tformattingFn={formatTextLowerCase}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonChangeFn={selectCheck}\r\n\t\t\t\t\t\tidentifier='format-uppercase'\r\n\t\t\t\t\t\tlabelText='ALL UPPERCASE'\r\n\t\t\t\t\t\tformattingFn={formatTextUpperCase}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonChangeFn={selectCheck}\r\n\t\t\t\t\t\tidentifier='format-web-ready'\r\n\t\t\t\t\t\tlabelText='web-ready'\r\n\t\t\t\t\t\tformattingFn={formatTextWebReady}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonChangeFn={selectCheck}\r\n\t\t\t\t\t\tidentifier='format-people-fucking-dying'\r\n\t\t\t\t\t\tlabelText='PeOPleFucKInGDyINg'\r\n\t\t\t\t\t\tformattingFn={formatTextPeopleFuckingDying}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='formatter__row'>\r\n\t\t\t\t<div className='formatter__box'>\r\n\t\t\t\t\t<label className='formatter__label' htmlFor='output'>\r\n\t\t\t\t\t\tOutput\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='formatter__textarea'\r\n\t\t\t\t\t\tname='output'\r\n\t\t\t\t\t\tid='output'\r\n\t\t\t\t\t\tref={outputRef}\r\n\t\t\t\t\t\tvalue={output}\r\n\t\t\t\t\t\treadOnly={true}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<button className='formatter__button'>Copy</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className='formatter__error'>{errorMessage}</p>}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default StringFormatter;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\tconst gitHubLink = 'https://github.com/andrews1022/string-formatter-react';\r\n\tconst twitterLink = 'https://twitter.com/andrew_devsrc';\r\n\r\n\treturn (\r\n\t\t<footer className='footer'>\r\n\t\t\t<p className='footer__text'>\r\n\t\t\t\tÂ© {new Date().getFullYear()} all rights reserved. designed and built and andrew shearer\r\n\t\t\t</p>\r\n\t\t\t<div className='footer__icon-row'>\r\n\t\t\t\t<a href={gitHubLink} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<i className='footer__icon fab fa-github'></i>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href={twitterLink} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<i className='footer__icon fab fa-twitter'></i>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Heading from './components/Heading';\nimport StringFormatter from './components/StringFormatter';\nimport Footer from './components/Footer';\n\nimport './scss/app.min.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<Heading text='String Formatter' />\n\t\t\t<StringFormatter />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}