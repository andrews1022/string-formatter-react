{"version":3,"sources":["components/Heading.js","components/Checkbox.js","functions/FormattingFunctions.js","components/StringFormatter.js","components/Footer.js","App.js","index.js"],"names":["Heading","text","className","Checkbox","onChangeFn","identifier","labelText","type","name","id","onChange","htmlFor","formatTextLowerCase","toLowerCase","formatTextUpperCase","toUpperCase","formatTextWebReady","replace","formatTextPeopleFuckingDying","split","map","v","Math","round","random","join","StringFormatter","useState","output","setOutput","checkedBox","setCheckedBox","errorMessage","setErrorMessage","copy","setCopy","inputRef","useRef","outputRef","selectCheck","e","selectedCheckbox","target","checked","length","currentState","preventDefault","ref","value","onClick","duration","inputValue","current","trim","getInputValue","setTimeout","formattingFn","readOnly","navigator","clipboard","textToCopy","writeText","error","console","log","Footer","Date","getFullYear","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAIeA,EAFC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,oBAAIC,UAAU,UAAd,SAAyBD,K,cCiBxCE,EAjBE,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC3C,OACC,sBAAKJ,UAAU,mBAAf,UACC,uBACCA,UAAU,mBACVK,KAAK,WACLC,KAAMH,EACNI,GAAIJ,EACJK,SAAUN,IAEX,uBAAOF,UAAU,yBAAyBS,QAASN,EAAnD,SACEC,QCZQM,EAAsB,SAACX,GAAD,OAAUA,EAAKY,eAGrCC,EAAsB,SAACb,GAAD,OAAUA,EAAKc,eAGrCC,EAAqB,SAACf,GAClC,OAAOA,EACLgB,QAAQ,yCAA0C,IAClDA,QAAQ,OAAQ,KAChBJ,eAIUK,EAA+B,SAACjB,GAC5C,OAAOA,EACLkB,MAAM,IACNC,KAAI,SAACC,GAAD,OAAQC,KAAKC,MAAMD,KAAKE,UAAYH,EAAEN,cAAgBM,EAAER,iBAC5DY,KAAK,KC+IOC,EAzJS,WAAO,IAAD,EACDC,mBAAS,IADR,mBACtBC,EADsB,KACdC,EADc,OAEOF,mBAAS,IAFhB,mBAEtBG,EAFsB,KAEVC,EAFU,OAGWJ,mBAAS,IAHpB,mBAGtBK,EAHsB,KAGRC,EAHQ,OAILN,mBAAS,QAJJ,mBAItBO,EAJsB,KAIhBC,EAJgB,KAMvBC,EAAWC,iBAAO,MAClBC,EAAYD,iBAAO,MASnBE,EAAc,SAACC,GACpB,IAAMC,EAAmBD,EAAEE,OACOD,EAAiBE,QAI9Cb,EAAWc,OAHF,EAIZb,GAAc,SAACc,GAAD,4BAAsBA,GAAtB,CAAoCJ,QAElDD,EAAEM,iBACFN,EAAEE,OAAOC,SAAU,GAIpBZ,GAAc,iBAAM,OAyDtB,OACC,uBAAM7B,UAAU,YAAhB,UACC,sBAAKA,UAAU,iBAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,uBAAOA,UAAU,mBAAmBS,QAAQ,QAA5C,mBAGA,0BACCT,UAAU,sBACVM,KAAK,QACLC,GAAG,QACHsC,IAAKX,IAEN,uBAAOlC,UAAU,oBAAoBK,KAAK,SAASyC,MAAM,SAASC,QA5DnD,SAACT,GACnBA,EAAEM,iBAEF,IATqCI,EAS/BC,EAjCe,SAACX,GAEtB,OADAA,EAAEM,iBACKV,EAASgB,QAAQJ,MAAMK,OA+BXC,CAAcd,GAEjC,GAAKW,GAAoC,IAAtBrB,EAAWc,OAG7B,OAAQd,EAAW,GAAGrB,IACrB,IAAK,mBACJ6B,EAAUc,QAAQJ,MAAQnB,EAAUjB,EAAoBuC,IACxD,MAED,IAAK,mBACJb,EAAUc,QAAQJ,MAAQnB,EAAUf,EAAoBqC,IACxD,MAED,IAAK,mBACJb,EAAUc,QAAQJ,MAAQnB,EAAUb,EAAmBmC,IACvD,MAED,IAAK,8BACJb,EAAUc,QAAQJ,MAAQnB,EAAUX,EAA6BiC,SA5B/BD,EAY4B,KAXjEjB,EAWqB,4CAVrBsB,YAAW,kBAAMtB,EAAgB,MAAKiB,SAkEpC,sBAAKhD,UAAU,iBAAf,UACC,sBAAMA,UAAU,mBAAhB,8BACA,cAAC,EAAD,CACCE,WAAYmC,EACZlC,WAAW,mBACXC,UAAU,gBACVkD,aAAc5C,IAEf,cAAC,EAAD,CACCR,WAAYmC,EACZlC,WAAW,mBACXC,UAAU,gBACVkD,aAAc1C,IAEf,cAAC,EAAD,CACCV,WAAYmC,EACZlC,WAAW,mBACXC,UAAU,YACVkD,aAAcxC,IAEf,cAAC,EAAD,CACCZ,WAAYmC,EACZlC,WAAW,8BACXC,UAAU,qBACVkD,aAActC,UAIjB,qBAAKhB,UAAU,iBAAf,SACC,sBAAKA,UAAU,iBAAf,UACC,uBAAOA,UAAU,mBAAmBS,QAAQ,SAA5C,oBAGA,0BACCT,UAAU,kDACVM,KAAK,SACLC,GAAG,SACHsC,IAAKT,EACLU,MAAOpB,EACP6B,UAAU,IAEX,wBAAQvD,UAAU,oBAAoB+C,QAxEZ,SAACT,GAC9B,GAAIkB,UAAUC,UAAW,CACxBnB,EAAEM,iBAEF,IAAMc,EAAatB,EAAUc,QAAQJ,MAErC,IACCU,UAAUC,UAAUE,UAAUD,GAC9BzB,EAAQ,WACRoB,YAAW,kBAAMpB,EAAQ,UAAS,MACjC,MAAO2B,GACRC,QAAQC,IAAI,QAASF,MA6DpB,SACE5B,SAIHF,GAAgB,mBAAG9B,UAAU,mBAAb,SAAiC8B,QCtItCiC,EArBA,WAId,OACC,yBAAQ/D,UAAU,SAAlB,UACC,oBAAGA,UAAU,eAAb,mBACI,IAAIgE,MAAOC,cADf,iEAGA,sBAAKjE,UAAU,mBAAf,UACC,mBAAGkE,KATa,wDASK1B,OAAO,SAAS2B,IAAI,sBAAzC,SACC,mBAAGnE,UAAU,iCAEd,mBAAGkE,KAXc,oCAWK1B,OAAO,SAAS2B,IAAI,sBAA1C,SACC,mBAAGnE,UAAU,yCCCHoE,G,MAVH,WACX,OACC,sBAAKpE,UAAU,UAAf,UACC,cAAC,EAAD,CAASD,KAAK,qBACd,cAAC,EAAD,IACA,cAAC,EAAD,SCRHsE,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.34dd910c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Heading = ({ text }) => <h1 className='heading'>{text}</h1>;\r\n\r\nexport default Heading;\r\n","import React from 'react';\r\n\r\nconst Checkbox = ({ onChangeFn, identifier, labelText }) => {\r\n\treturn (\r\n\t\t<div className='formatter__group'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='formatter__check'\r\n\t\t\t\ttype='checkbox'\r\n\t\t\t\tname={identifier}\r\n\t\t\t\tid={identifier}\r\n\t\t\t\tonChange={onChangeFn}\r\n\t\t\t/>\r\n\t\t\t<label className='formatter__check-label' htmlFor={identifier}>\r\n\t\t\t\t{labelText}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Checkbox;\r\n","// convert text to lowercase\r\nexport const formatTextLowerCase = (text) => text.toLowerCase();\r\n\r\n// convert text to lowercase\r\nexport const formatTextUpperCase = (text) => text.toUpperCase();\r\n\r\n// convert text to \"web-ready\"\r\nexport const formatTextWebReady = (text) => {\r\n\treturn text\r\n\t\t.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]/g, '')\r\n\t\t.replace(/\\s+/g, '-')\r\n\t\t.toLowerCase();\r\n};\r\n\r\n// convert text to \"PeOPleFucKInGDyINg\"\r\nexport const formatTextPeopleFuckingDying = (text) => {\r\n\treturn text\r\n\t\t.split('')\r\n\t\t.map((v) => (Math.round(Math.random()) ? v.toUpperCase() : v.toLowerCase()))\r\n\t\t.join('');\r\n};\r\n","import React, { useState, useRef } from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport {\r\n\tformatTextLowerCase,\r\n\tformatTextUpperCase,\r\n\tformatTextWebReady,\r\n\tformatTextPeopleFuckingDying\r\n} from './../functions/FormattingFunctions';\r\n\r\nconst StringFormatter = () => {\r\n\tconst [output, setOutput] = useState('');\r\n\tconst [checkedBox, setCheckedBox] = useState([]);\r\n\tconst [errorMessage, setErrorMessage] = useState('');\r\n\tconst [copy, setCopy] = useState('Copy');\r\n\r\n\tconst inputRef = useRef(null);\r\n\tconst outputRef = useRef(null);\r\n\r\n\t// get value from input text area\r\n\tconst getInputValue = (e) => {\r\n\t\te.preventDefault();\r\n\t\treturn inputRef.current.value.trim();\r\n\t};\r\n\r\n\t// limit number of checkboxes checked\r\n\tconst selectCheck = (e) => {\r\n\t\tconst selectedCheckbox = e.target;\r\n\t\tconst selectedCheckboxIsChecked = selectedCheckbox.checked;\r\n\t\tconst limit = 1;\r\n\r\n\t\tif (selectedCheckboxIsChecked) {\r\n\t\t\tif (checkedBox.length < limit) {\r\n\t\t\t\tsetCheckedBox((currentState) => [...currentState, selectedCheckbox]);\r\n\t\t\t} else {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.target.checked = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// reset to initial state\r\n\t\t\tsetCheckedBox(() => []);\r\n\t\t}\r\n\t};\r\n\r\n\tconst displayErrorMessage = (message, duration) => {\r\n\t\tsetErrorMessage(message);\r\n\t\tsetTimeout(() => setErrorMessage(''), duration);\r\n\t};\r\n\r\n\t// mirror text from input field to output field\r\n\tconst mirrorText = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst inputValue = getInputValue(e);\r\n\r\n\t\tif (!inputValue || checkedBox.length === 0) {\r\n\t\t\tdisplayErrorMessage('Please enter a value and/or select a box', 2250);\r\n\t\t} else {\r\n\t\t\tswitch (checkedBox[0].id) {\r\n\t\t\t\tcase 'format-lowercase':\r\n\t\t\t\t\toutputRef.current.value = setOutput(formatTextLowerCase(inputValue));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'format-uppercase':\r\n\t\t\t\t\toutputRef.current.value = setOutput(formatTextUpperCase(inputValue));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'format-web-ready':\r\n\t\t\t\t\toutputRef.current.value = setOutput(formatTextWebReady(inputValue));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'format-people-fucking-dying':\r\n\t\t\t\t\toutputRef.current.value = setOutput(formatTextPeopleFuckingDying(inputValue));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst copyOutputToClipboard = (e) => {\r\n\t\tif (navigator.clipboard) {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tconst textToCopy = outputRef.current.value;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tnavigator.clipboard.writeText(textToCopy);\r\n\t\t\t\tsetCopy('Copied!');\r\n\t\t\t\tsetTimeout(() => setCopy('Copy'), 1500);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('oops!', error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='formatter'>\r\n\t\t\t<div className='formatter__row'>\r\n\t\t\t\t<div className='formatter__box'>\r\n\t\t\t\t\t<label className='formatter__label' htmlFor='input'>\r\n\t\t\t\t\t\tInput\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='formatter__textarea'\r\n\t\t\t\t\t\tname='input'\r\n\t\t\t\t\t\tid='input'\r\n\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<input className='formatter__button' type='submit' value='Format' onClick={mirrorText} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='formatter__box'>\r\n\t\t\t\t\t<span className='formatter__label'>Options (Pick 1)</span>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonChangeFn={selectCheck}\r\n\t\t\t\t\t\tidentifier='format-lowercase'\r\n\t\t\t\t\t\tlabelText='all lowercase'\r\n\t\t\t\t\t\tformattingFn={formatTextLowerCase}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonChangeFn={selectCheck}\r\n\t\t\t\t\t\tidentifier='format-uppercase'\r\n\t\t\t\t\t\tlabelText='ALL UPPERCASE'\r\n\t\t\t\t\t\tformattingFn={formatTextUpperCase}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonChangeFn={selectCheck}\r\n\t\t\t\t\t\tidentifier='format-web-ready'\r\n\t\t\t\t\t\tlabelText='web-ready'\r\n\t\t\t\t\t\tformattingFn={formatTextWebReady}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonChangeFn={selectCheck}\r\n\t\t\t\t\t\tidentifier='format-people-fucking-dying'\r\n\t\t\t\t\t\tlabelText='PeOPleFucKInGDyINg'\r\n\t\t\t\t\t\tformattingFn={formatTextPeopleFuckingDying}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='formatter__row'>\r\n\t\t\t\t<div className='formatter__box'>\r\n\t\t\t\t\t<label className='formatter__label' htmlFor='output'>\r\n\t\t\t\t\t\tOutput\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName='formatter__textarea formatter__textarea--output'\r\n\t\t\t\t\t\tname='output'\r\n\t\t\t\t\t\tid='output'\r\n\t\t\t\t\t\tref={outputRef}\r\n\t\t\t\t\t\tvalue={output}\r\n\t\t\t\t\t\treadOnly={true}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<button className='formatter__button' onClick={copyOutputToClipboard}>\r\n\t\t\t\t\t\t{copy}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{errorMessage && <p className='formatter__error'>{errorMessage}</p>}\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default StringFormatter;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\tconst gitHubLink = 'https://github.com/andrews1022/string-formatter-react';\r\n\tconst twitterLink = 'https://twitter.com/andrew_devsrc';\r\n\r\n\treturn (\r\n\t\t<footer className='footer'>\r\n\t\t\t<p className='footer__text'>\r\n\t\t\t\t© {new Date().getFullYear()} all rights reserved. designed and built and andrew shearer\r\n\t\t\t</p>\r\n\t\t\t<div className='footer__icon-row'>\r\n\t\t\t\t<a href={gitHubLink} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<i className='footer__icon fab fa-github'></i>\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href={twitterLink} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<i className='footer__icon fab fa-twitter'></i>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Heading from './components/Heading';\nimport StringFormatter from './components/StringFormatter';\nimport Footer from './components/Footer';\n\nimport './scss/app.min.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<Heading text='String Formatter' />\n\t\t\t<StringFormatter />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}